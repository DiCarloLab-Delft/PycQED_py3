name: Build Status

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.6', '3.7']

    steps:
    - uses: actions/checkout@v1
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup headless display
      run: |
        sudo apt-get update
        sudo apt-get install xvfb
        sudo Xvfb :99 -screen 0 1024x768x24 </dev/null &
        sleep 3
    - name: Install OpenQL
      run: pip install --verbose -f https://github.com/DiCarloLab-Delft/OpenQL/releases "qutechopenql >= 0.10.3"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        sudo apt-get install python3-pyqt5
        #pip install --verbose -f https://github.com/DiCarloLab-Delft/OpenQL/releases "qutechopenql >= 0.10.3"
        pip install -r requirements.txt
        pip install qutip  # ensure all dependencies installed before qutip
        pip install -e .   # installs pycqed itself
        pip install coverage
        pip install pytest-cov
        pip install codecov
        pip install codacy-coverage
        pip install pytest
        pip install pytest-xvfb
    - name: Lint with flake8
      run: |
        pip install flake8
        # dont stop the build if there are Python syntax errors or undefined names
        flake8 . --count --exit-zero --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        py.test pycqed/tests --cov=pycqed --cov-report xml --cov-report html --cov-config=.coveragerc
    - name: Upload code coverage report
      run: |
        bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r coverage.xml
        codecov
      env: # set secrets as environmental variables
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
