{
    // author: Wouter Vlothuizen
    // notes:  see https://openql.readthedocs.io/en/latest/platform.html#ccplatform for documentation of this file


	"eqasm_compiler" : "eqasm_backend_cc",

	"hardware_settings": {
		"qubit_number": 7,
		"cycle_time" : 20,        // in [ns]

		"eqasm_backend_cc": {
			// Immutable properties of instruments.
			"instrument_definitions": {
				"qutech-qwg": {
					"channels": 4,
					"control_group_sizes": [1, 4]
				},
				"zi-hdawg": {
					"channels": 8,
					"control_group_sizes": [1, 2, 4, 8] // NB: size=1 needs special treatment of waveforms because one AWG unit drives 2 channels
				},
				"qutech-vsm": {
					"channels": 32,
					"control_group_sizes": [1]
				},
				"zi-uhfqa": {
					"channels": 9,
					"control_group_sizes": [1]
				}
			},   // instrument_definitions



			// Modes to control instruments. These define which bits are used to control groups of channels
            // and/or get back measurement results.
			"control_modes": {
				"awg8-mw-vsm-hack": {					  // ZI_HDAWG8.py::cfg_codeword_protocol() == 'microwave'. Old hack to skip DIO[8]. Doesn't support QWG
					"control_bits": [
						[7,6,5,4,3,2,1,0],                // group 0
						[16,15,14,13,12,11,10,9]          // group 1
					],
					"trigger_bits": [31]
				},
				"awg8-mw-vsm": {						  // the way the mode above should have been and support for QWG
					"control_bits": [
						[7,6,5,4,3,2,1,0],                // group 0
                        [23,22,21,20,19,18,17,16]         // group 1
					],
					"trigger_bits": [31,15]
				},
				"awg8-mw-direct-iq": {				      // just I&Q to generate microwave without VSM. HDAWG8: "new_novsm_microwave"
					"control_bits": [
						[6,5,4,3,2,1,0],                  // group 0
						[13,12,11,10,9,8,7],              // group 1
						[22,21,20,19,18,17,16],           // group 2. NB: starts at bit 16 so twin-QWG can also support it
						[29,28,27,26,25,24,23]            // group 4
					],
					"trigger_bits": [31]
				},
				"awg8-flux": {							   // ZI_HDAWG8.py::cfg_codeword_protocol() == 'flux'
                    // NB: please note that internally one AWG unit handles 2 channels, which requires special handling of the waveforms
					"control_bits": [
						[2,1,0],                          // group 0
						[5,4,3],
						[8,7,6],
						[11,10,9],
						[18,17,16],                       // group 4. NB: starts at bit 16 so twin-QWG can also support it
						[21,20,19],
						[24,23,22],
						[27,26,25]                        // group 7
					],
					"trigger_bits": [31,15]
				},
				"awg8-flux-vector-8": {				       // single code word for 8 flux channels. FIXME: no official mode yet
					"control_bits": [
						[7,6,5,4,3,2,1,0]     // FIXME: how many bits are available
					],
					"trigger_bits": [31]
				},
				"uhfqa-9ch": {
					"control_bits": [[17],[18],[19],[20],[21],[22],[23],[24],[25]],    // group[0:8]
					"trigger_bits": [16],
					"result_bits": [[1],[2],[3],[4],[5],[6],[7],[8],[9]],              // group[0:8]
					"data_valid_bits": [0]
				},
				"vsm-32ch":{
					"control_bits": [
						[0],[1],[2],[3],[4],[5],[6],[7],                      // group[0:7]
						[8],[9],[10],[11],[12],[13],[14],[15],                // group[8:15]
						[16],[17],[18],[19],[20],[21],[22],[23],              // group[16:23]
						[24],[25],[26],[27],[28],[28],[30],[31]               // group[24:31]
					],
					"trigger_bits": []				                         // no trigger
				}
			},   // control_modes



            // Signal library that gate definitions can refer to.
            "signals": {
                "single-qubit-mw": [
                    {   "type": "mw",
                        "operand_idx": 0,
                        "value": [
                            "{gateName}-{instrumentName}:{instrumentGroup}-gi",
                            "{gateName}-{instrumentName}:{instrumentGroup}-gq",
                            "{gateName}-{instrumentName}:{instrumentGroup}-di",
                            "{gateName}-{instrumentName}:{instrumentGroup}-dq"
                        ]
                    }
                ],
                "two-qubit-flux": [
                    {   "type": "flux",
                        "operand_idx": 0,                                   // control
                        "value": ["flux-0-{qubit}"]
                    },
                    {   "type": "flux",
                        "operand_idx": 1,                                   // target
                        "value": ["flux-1-{qubit}"]
                    }
                    // FIXME: CZ(a,b) and CZ(a,c) requires different waveforms on a
                ],
                "single-qubit-flux": [
                    {   "type": "flux",
                        "operand_idx": 0,                                   // control
                        "value": ["flux-0-{qubit}"]
                    }
                ]
            },  // signals



			// Instruments used in this setup, their configuration and connectivity.
			"instruments": [
				// readout.
				{
					"name": "ro_0",
                    "qubits": [[0], [2], [], [], [], [], [], [], []],
                    "signal_type": "measure",
					"ref_instrument_definition": "zi-uhfqa",
                    "ref_control_mode": "uhfqa-9ch",
					"controller": {
						"name": "cc",	// FIXME
						"slot": 0,
						"io_module": "CC-CONN-DIO"
					}
				},
                {
                    "name": "ro_1",
                    "qubits": [[1], [3], [4], [5], [6], [], [], [], []],
                    "signal_type": "measure",
                    "ref_instrument_definition": "zi-uhfqa",
                    "ref_control_mode": "uhfqa-9ch",
                    "controller": {
                        "name": "cc",   // FIXME
                        "slot": 11,
                        "io_module": "CC-CONN-DIO"
                    }
                },
				// microwave.
				{
					"name": "mw_0",
                    "qubits": [[0], [1], [2], [3]],
                    "signal_type": "mw",
					"ref_instrument_definition": "zi-hdawg",
                    "ref_control_mode": "awg8-mw-direct-iq",
					"controller": {
						"name": "cc",	// FIXME
						"slot": 3,
						"io_module": "CC-CONN-DIO-DIFF"
					}
				},
                {
                    "name": "mw_1",
                    "qubits": [[], [5], [6], [4]],
                    "signal_type": "mw",
                    "ref_instrument_definition": "zi-hdawg",
                    "ref_control_mode": "awg8-mw-direct-iq",
                    "controller": {
                        "name": "cc",   // FIXME
                        "slot": 4,
                        "io_module": "CC-CONN-DIO-DIFF"
                    }
                },

				// flux
				{
					"name": "flux_0",
                    "qubits": [[3], [1], [6], [4], [2], [0], [5], []],
                    "signal_type": "flux",
					"ref_instrument_definition": "zi-hdawg",
                    "ref_control_mode": "awg8-flux",
//                    "ref_control_mode": "awg8-flux-vector-8",
					"controller": {
						"name": "cc",	// FIXME
						"slot": 9,
						"io_module": "CC-CONN-DIO-DIFF"
					}
				}
			] // instruments
		}
	},



// extracted from PyqQED_py3 'generate_CCL_cfg.py'
  	"gate_decomposition": {
        // necessary to support measure_z cQASM operation, using measure operation
        "measure_all": ["measure q0", "measure q1", "measure q2", "measure q3", "measure q4"],
        "measure_z %0": ["i %0", "measure %0","i %0"],  // added pre and post identities. LDC 22/10/13.
        "measure_y %0": ["rx90 %0", "measure %0", "rx270 %0"], // modified by LDC, 22/10/13 to add post-rotation.
        "measure_x %0": ["ry270 %0", "measure %0", "ry90 %0"], // same.
        "prep_z %0": ["prepz %0", "i %0"], // added post identity, LDC 22/10/13.
        "prep_y %0": ["prepz %0", "rx270 %0"],
        "prep_x %0": ["prepz %0", "ry90 %0"],
        // "prepy %0": ["rx270 %0"],
        // "prepx %0": ["ry90 %0"],

        // gate decompositions for quantum inspire starmon-5
        "x %0": ["rx180 %0"],
        "y %0": ["ry180 %0"],
        "h %0": ["ry90 %0", "rx180 %0"],

        // To support other forms of writing the same gates
        "x180 %0": ["rx180 %0"],
        "y180 %0": ["ry180 %0"],
        "y90 %0": ["ry90 %0"],
        "x90 %0": ["rx90 %0"],
        "my90 %0": ["rym90 %0"],
        "mx90 %0": ["rxm90 %0"],

        "cz q0, q2": ["barrier q0,q2,q3", "sf_cz_sw q0", "sf_cz_ne q2", "sf_park q3", "barrier q0,q2,q3", "phase_corr_sw q0", "phase_corr_ne q2", "phase_corr_park q3", "barrier q0,q2,q3"],
        "cz q2, q0": ["barrier q0,q2,q3", "sf_cz_sw q0", "sf_cz_ne q2", "sf_park q3", "barrier q0,q2,q3", "phase_corr_sw q0", "phase_corr_ne q2", "phase_corr_park q3", "barrier q0,q2,q3"],

        "cz q0, q3": ["barrier q0,q3,q2", "sf_cz_se q0", "sf_cz_nw q3", "sf_park q2", "barrier q0,q3,q2", "phase_corr_se q0", "phase_corr_nw q3", "phase_corr_park q2", "barrier q0,q3,q2"],
        "cz q3, q0": ["barrier q0,q3,q2", "sf_cz_se q0", "sf_cz_nw q3", "sf_park q2", "barrier q0,q3,q2", "phase_corr_se q0", "phase_corr_nw q3", "phase_corr_park q2", "barrier q0,q3,q2"],

        "cz q1, q3": ["barrier q1,q3,q4", "sf_cz_sw q1", "sf_cz_ne q3", "sf_park q4", "barrier q1,q3,q4", "phase_corr_sw q1", "phase_corr_ne q3", "phase_corr_park q4", "barrier q1,q3,q4"],
        "cz q3, q1": ["barrier q1,q3,q4", "sf_cz_sw q1", "sf_cz_ne q3", "sf_park q4", "barrier q1,q3,q4", "phase_corr_sw q1", "phase_corr_ne q3", "phase_corr_park q4", "barrier q1,q3,q4"],

        "cz q1, q4": ["barrier q1,q4,q3", "sf_cz_se q1", "sf_cz_nw q4", "sf_park q3", "barrier q1,q4,q3", "phase_corr_se q1", "phase_corr_nw q4", "phase_corr_park q3", "barrier q1,q4,q3"],
        "cz q4, q1": ["barrier q1,q4,q3", "sf_cz_se q1", "sf_cz_nw q4", "sf_park q3", "barrier q1,q4,q3", "phase_corr_se q1", "phase_corr_nw q4", "phase_corr_park q3", "barrier q1,q4,q3"],

        "cz q2, q5": ["barrier q2,q5", "sf_cz_se q2", "sf_cz_nw q5", "barrier q2,q5", "phase_corr_se q2", "phase_corr_nw q5", "barrier q2,q5"],
        "cz q5, q2": ["barrier q2,q5", "sf_cz_se q2", "sf_cz_nw q5", "barrier q2,q5", "phase_corr_se q2", "phase_corr_nw q5", "barrier q2,q5"],

        "cz q3, q5": ["barrier q3,q5,q6", "sf_cz_sw q3", "sf_cz_ne q5", "sf_park q6", "barrier q3,q5,q6", "phase_corr_sw q3", "phase_corr_ne q5", "phase_corr_park q6", "barrier q3,q5,q6"],
        "cz q5, q3": ["barrier q3,q5,q6", "sf_cz_sw q3", "sf_cz_ne q5", "sf_park q6", "barrier q3,q5,q6", "phase_corr_sw q3", "phase_corr_ne q5", "phase_corr_park q6", "barrier q3,q5,q6"],

        "cz q3, q6": ["barrier q3,q6,q5", "sf_cz_se q3", "sf_cz_nw q6", "sf_park q5", "barrier q3,q6,q5", "phase_corr_se q3", "phase_corr_nw q6", "phase_corr_park q5", "barrier q3,q6,q5"],
        "cz q6, q3": ["barrier q3,q6,q5", "sf_cz_se q3", "sf_cz_nw q6", "sf_park q5", "barrier q3,q6,q5", "phase_corr_se q3", "phase_corr_nw q6", "phase_corr_park q5", "barrier q3,q6,q5"],

        "cz q4, q6": ["barrier q4,q6", "sf_cz_sw q4", "sf_cz_ne q6", "barrier q4,q6", "phase_corr_sw q4", "phase_corr_ne q6", "barrier q4,q6"],
        "cz q6, q4": ["barrier q4,q6", "sf_cz_sw q4", "sf_cz_ne q6", "barrier q4,q6", "phase_corr_sw q4", "phase_corr_ne q6", "barrier q4,q6"],


        // Clifford decomposition per Epstein et al. Phys. Rev. A 89, 062321 (2014)
        "cl_0 %0": ["i %0"],
        "cl_1 %0": ["ry90 %0", "rx90 %0"],
        "cl_2 %0": ["rx270 %0", "ry270 %0"],
        "cl_3 %0": ["rx180 %0"],
        "cl_4 %0": ["ry270 %0", "rx270 %0"],
        "cl_5 %0": ["rx90 %0", "ry270 %0"],
        "cl_6 %0": ["ry180 %0"],
        "cl_7 %0": ["ry270 %0", "rx90 %0"],
        "cl_8 %0": ["rx90 %0", "ry90 %0"],
        "cl_9 %0": ["rx180 %0", "ry180 %0"],
        "cl_10 %0": ["ry90 %0", "rx270 %0"],
        "cl_11 %0": ["rx270 %0", "ry90 %0"],
        "cl_12 %0": ["ry90 %0", "rx180 %0"],
        "cl_13 %0": ["rx270 %0"],
        "cl_14 %0": ["rx90 %0", "ry270 %0", "rx270 %0"],
        "cl_15 %0": ["ry270 %0"],
        "cl_16 %0": ["rx90 %0"],
        "cl_17 %0": ["rx90 %0", "ry90 %0", "rx90 %0"],
        "cl_18 %0": ["ry270 %0", "rx180 %0"],
        "cl_19 %0": ["rx90 %0", "ry180 %0"],
        "cl_20 %0": ["rx90 %0", "ry270 %0", "rx90 %0"],
        "cl_21 %0": ["ry90 %0"],
        "cl_22 %0": ["rx270 %0", "ry180 %0"],
        "cl_23 %0": ["rx90 %0", "ry90 %0", "rx270 %0"]
  	},

    // User defined instruction set.
    // Sub keys for "instructions", standard OpenQL:
    // - <key>                          name for the instruction (NB: supports several naming schemes)
    // - <key>/duration                 duration in [ns]
    // - <key>/latency                  optional instruction latency (effect unclear)
    // - <key>/matrix                   required, but generally does not contain useful information
    //
    // The cc-light scheduler that we currently use requires the following sub keys:
    // - <key>/cc_light_instr
    // - <key>/type
    // Sub keys for "instructions", CC additions:
    // - <key>/cc/signal/type
    // - <key>/cc/signal/operand_idx
    // - <key>/cc/signal/value
    //                                  Supports the following macro expansions:
    //                                  * {gateName}
    //                                  * {instrumentName}
    //                                  * {instrumentGroup}
    //                                  * {qubit}
    // - <key>/cc/ref_signal            reference to key 'signals/<value> instead of '<key>/cc/signal'
    //
    //
    // FIXME: allow AWG8 setPrecompClear with wave



    // User defined instruction set.
	"instructions": {
        // based on PyqQED_py3 'mw_lutman.py' and 'generate_CCL_cfg.py':
        // FIXME: also add conditional single qubit gates?
        "i": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "i",
            "cc": {
//              "ref_signal": "single-qubit-mw",
                "signal": [],   // no signal, to prevent conflicts with other gates (NB: will output nothing because VSM stays off)
                "static_codeword_override": [0]
            }
        },
        "rx180": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x",
            "cc": {
                "ref_signal": "single-qubit-mw",    // NB: reference, instead of defining "signal" here
                "static_codeword_override": [1]
            }
        },
        "ry180": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [8]
            }
        },
        "rx90": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x90",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [4]
            }
        },
        "ry90": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y90",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [5]
            }
        },
        "rxm90": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "xm90",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [12]
            }
        },
        "rym90": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "ym90",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [13]
            }
        },
        "rx270": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "ym90",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [12]
            }
        },
        "ry270": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "ym90",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [13]
            }
        },

        
        "cz_park": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "cz",
            "cc": {
                "signal": [
                    {   "type": "flux",
                        "operand_idx": 0,                                   // control
                        "value": ["flux-0-{qubit}"]
                    },
                    {   "type": "flux",
                        "operand_idx": 1,                                   // target
                        "value": ["flux-1-{qubit}"]
                    },
                    {   "type": "flux",
                        "operand_idx": 2,                                   // park
                        "value": ["park_cz-{qubit}"]
                    }
                ],
                "static_codeword_override": [0,0,0]   // FIXME
            }
        },

		// additions from 'CC-software-implementation.docx'
		// flux pulses, see:
        // - https://github.com/QE-Lab/OpenQL/issues/176
        // - https://github.com/QE-Lab/OpenQL/issues/224
        // - https://github.com/QE-Lab/OpenQL/pull/238

		"park_cz" : { // park signal with same length as cz gate
			"duration" : @FLUX_DURATION@,
			"matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
			"cc_light_instr": "park_cz",
			"type": "measure",		// FIXME
			"cc": {
				"signal": [
					{	"type": "flux",
						"operand_idx": 0,
						"value": ["park_cz-{qubit}"]
					}
				],
                "static_codeword_override": [0]   // FIXME
			}
		},

		"park_measure" : { // park signal with same length as measurement
			"duration" : @RO_DURATION@,
			"matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
			"cc": {
				"signal": [
					{	"type": "flux",
						"operand_idx": 0,
						"value": ["park_measure-{qubit}"]
					}
				],
                "static_codeword_override": [0]   // FIXME
			}
		},


		// based on PyqQED_py3 'generate_CCL_cfg.py':
		"prepz": {
			"duration": @INIT_DURATION@,
			"matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
			"type": "readout",
			"cc_light_instr": "prepz",
            "cc": {
//                "ref_signal": "single-qubit-mw"
                "signal": [],    // FIXME: no signal, pycQED::test_multi_qubit_oql_CC.py fails otherwise on scheduling issues
                "static_codeword_override": [0]   // FIXME
            }
		},

		"measure": {
			"duration": @RO_DURATION@,
			"matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
			"type": "readout",
			"cc_light_instr": "measz",
			"cc": {
				"signal": [
					{	"type": "measure",
						"operand_idx": 0,
						"value": ["dummy"]			// Future extension: specify output and weight, and generate code word
					}
				],
                "static_codeword_override": [0]   // FIXME
			}
		},

        // additions for pycQED::test_single_qubit_oql_CC.py
        // FIXME: contents untested
        "square": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "square",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [0]
            }
        },
        "spec": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "spec",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [0]
            }
        },
        "rx12": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "rx12",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [9]
            }
        },
        ///////////////////////////////////////////////////////
        // Ensure codewords to 64 for echo sequences generated
        ///////////////////////////////////////////////////////
        "cw_00": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_00",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [0]
            }
        },
        "cw_01": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_01",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [9]
            }
        },
        "cw_02": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_02",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [2]
            }
        },
        "cw_03": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_03",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [3]
            }
        },
        "cw_04": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_04",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [4]
            }
        },
        "cw_05": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_05",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [5]
            }
        },
        "cw_06": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_06",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [6]
            }
        },
        "cw_07": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_07",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [7]
            }
        },
        "cw_08": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_08",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [1]
            }
        },
        "cw_09": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_09",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [8]
            }
        },
        "cw_10": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_10",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [10]
            }
        },
        "cw_11": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_11",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [11]
            }
        },
        "cw_12": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_12",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [12]
            }
        },
        "cw_13": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_13",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [13]
            }
        },
        "cw_14": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_14",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [14]
            }
        },
        "cw_15": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_15",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [15]
            }
        },
        "cw_16": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_16",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [16]
            }
        },
        "cw_17": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_17",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [17]
            }
        },
        "cw_18": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_18",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [18]
            }
        },
        "cw_19": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_19",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [19]
            }
        },
        "cw_20": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_20",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [20]
            }
        },
        "cw_21": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_21",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [21]
            }
        },
        "cw_22": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_22",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [22]
            }
        },
        "cw_23": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_23",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [23]
            }
        },
        "cw_24": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_24",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [24]
            }
        },
        "cw_25": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_25",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [25]
            }
        },
        "cw_26": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_26",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [26]
            }
        },
        "cw_27": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_27",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [27]
            }
        },
        "cw_28": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_28",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [28]
            }
        },
        "cw_29": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_29",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [29]
            }
        },
        "cw_30": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_30",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [30]
            }
        },
        "cw_31": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [31]
            }
        },
        "cw_32": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [32]
            }
        },
        "cw_33": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [33]
            }
        },
        "cw_34": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [34]
            }
        },
        "cw_35": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [35]
            }
        },
        "cw_36": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [36]
            }
        },
        "cw_37": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [37]
            }
        },
        "cw_38": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [38]
            }
        },
        "cw_39": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [39]
            }
        },
        "cw_40": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [40]
            }
        },
        "cw_41": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [41]
            }
        },
        "cw_42": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [42]
            }
        },
        "cw_43": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [43]
            }
        },
        "cw_44": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [44]
            }
        },
        "cw_45": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [45]
            }
        },
        "cw_46": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [46]
            }
        },
        "cw_47": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [47]
            }
        },
        "cw_48": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [48]
            }
        },
        "cw_49": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [49]
            }
        },
        "cw_50": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [50]
            }
        },
        "cw_51": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [51]
            }
        },
        "cw_52": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [52]
            }
        },
        "cw_53": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [53]
            }
        },
        "cw_54": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [54]
            }
        },
        "cw_55": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [55]
            }
        },
        "cw_56": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [56]
            }
        },
        "cw_57": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [57]
            }
        },
        "cw_58": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [58]
            }
        },
        "cw_59": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [59]
            }
        },
        "cw_60": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [60]
            }
        },
        "cw_61": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [61]
            }
        },
        "cw_62": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [62]
            }
        },
        "cw_63": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": [63]
            }
        },

        //////////////////////////////////////////
        // Default 2 Qubit Operations
        //////////////////////////////////////////
        "fl_cw_00": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "fl_cw_00",
            "cc": {
                "ref_signal": "two-qubit-flux",
                "static_codeword_override": [0]
            }
        },
        "fl_cw_01": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "fl_cw_01",
            "cc": {
                "ref_signal": "two-qubit-flux",
                "static_codeword_override": [1]
            }
        },
        "fl_cw_02": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "fl_cw_02",
            "cc": {
                "ref_signal": "two-qubit-flux",
                "static_codeword_override": [2]
            }
        },
        "fl_cw_03": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "fl_cw_03",
            "cc": {
                "ref_signal": "two-qubit-flux",
                "static_codeword_override": [3]
            }
        },
        "fl_cw_04": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "fl_cw_04",
            "cc": {
                "ref_signal": "two-qubit-flux",
                "static_codeword_override": [4]
            }
        },
        "fl_cw_05": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "fl_cw_05",
            "cc": {
                "ref_signal": "two-qubit-flux",
                "static_codeword_override": [5]
            }
        },
        "fl_cw_06": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "fl_cw_06",
            "cc": {
                "ref_signal": "two-qubit-flux",
                "static_codeword_override": [6]
            }
        },
        "fl_cw_07": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "fl_cw_07",
            "cc": {
                "ref_signal": "two-qubit-flux",
                "static_codeword_override": [7]
            }
        },

        // single qubit flux hacks (compatible with QCC demo/flux lutman)
        "sf_cz_ne": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "sf_cz_ne",
            "cc": {
                "ref_signal": "single-qubit-flux",
                "static_codeword_override": [1]
            }
        },
        "sf_cz_se": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "sf_cz_se",
            "cc": {
                "ref_signal": "single-qubit-flux",
                "static_codeword_override": [2]
            }
        },
        "sf_cz_sw": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "sf_cz_sw",
            "cc": {
                "ref_signal": "single-qubit-flux",
                "static_codeword_override": [3]
            }
        },
        "sf_cz_nw": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "sf_cz_nw",
            "cc": {
                "ref_signal": "single-qubit-flux",
                "static_codeword_override": [4]
            }
        },
        "sf_park": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "sf_park",
            "cc": {
                "ref_signal": "single-qubit-flux",
                "static_codeword_override": [5]
            }
        },
        "sf_sp_park": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "sf_sp_park",
            "cc": {
                "ref_signal": "single-qubit-flux",
                "static_codeword_override": [5]
            }
        },
        "sf_square": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "sf_square",
            "cc": {
                "ref_signal": "single-qubit-flux",
                "static_codeword_override": [6]
            }
        },

        //////////////////////////////////////////
        // Custom operations for Quantum Inspire
        //////////////////////////////////////////
        "rx6":  {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x6",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 16
            }
        },
        "rx13":  {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x13",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 17
            }
        },
        "rx19":  {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x19",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 18
            }
        },
        "rx26":  {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x26",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 19
            }
        },
        "rx32":  {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x32",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 20
            }
        },
        "rx39":  {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x39",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 21
            }
        },
        "rx51":  {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x51",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 22
            }
        },
        "rx58":  {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x58",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 23
            }
        },
        "rx64":  {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x64",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 24
            }
        },
        "rx71":  {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x71",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 25
            }
        },
        "rx77":  {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x77",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 26
            }
        },
        "rx84":  {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x84",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 27
            }
        },
        "rx96":  {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x96",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 28
            }
        },
        "rx103":  {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x103",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 29
            }
        },
        "rx109": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x109",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 30
            }
        },
        "rx116": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x116",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 31
            }
        },
        "rx122": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x122",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 32
            }
        },
        "rx129": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x129",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 33
            }
        },
        "rx141": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x141",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 34
            }
        },
        "rx148": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x148",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 35
            }
        },
        "rx154": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x154",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 36
            }
        },
        "rx161": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x161",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 37
            }
        },
        "rx167": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x167",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 38
            }
        },
        "rx174": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x174",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 39
            }
        },
        "rx186": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x186",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 40
            }
        },
        "rx193": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x193",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 41
            }
        },
        "rx199": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x199",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 42
            }
        },
        "rx206": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x206",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 43
            }
        },
        "rx212": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x212",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 44
            }
        },
        "rx219": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x219",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 45
            }
        },
        "rx231": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x231",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 46
            }
        },
        "rx238": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x238",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 47
            }
        },
        "rx244": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x244",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 48
            }
        },
        "rx251": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x251",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 49
            }
        },
        "rx257": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x257",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 50
            }
        },
        "rx264": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x264",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 51
            }
        },
        "rx276": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x276",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 52
            }
        },
        "rx283": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x283",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 53
            }
        },
        "rx289": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x289",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 54
            }
        },
        "rx296": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x296",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 55
            }
        },
        "rx302": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x302",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 56
            }
        },
        "rx309": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x309",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 57
            }
        },
        "rx321": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x321",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 58
            }
        },
        "rx328": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x328",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 59
            }
        },
        "rx334": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x334",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 60
            }
        },
        "rx341": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x341",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 61
            }
        },
        "rx347": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x347",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 62
            }
        },
        "rx354": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x354",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 63
            }
        },
        
        "ry6"  : {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y6",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 64
            }
        },
        "ry13" : {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y13",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 65
            }
        },
        "ry19" : {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y19",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 66
            }
        },
        "ry26" : {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y26",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 67
            }
        },
        "ry32" : {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y32",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 68
            }
        },
        "ry39" : {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y39",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 69
            }
        },
        "ry51" : {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y51",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 70
            }
        },
        "ry58" : {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y58",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 71
            }
        },
        "ry64" : {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y64",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 72
            }
        },
        "ry71" : {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y71",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 73
            }
        },
        "ry77" : {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y77",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 74
            }
        },
        "ry84" : {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y84",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 75
            }
        },
        "ry96" : {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y96",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 76
            }
        },
        "ry103" : {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y103",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 77
            }
        },
        "ry109": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y109",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 78
            }
        },
        "ry116": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y116",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 79
            }
        },
        "ry122": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y122",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 80
            }
        },
        "ry129": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y129",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 81
            }
        },
        "ry141": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y141",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 82
            }
        },
        "ry148": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y148",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 83
            }
        },
        "ry154": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y154",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 84
            }
        },
        "ry161": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y161",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 85
            }
        },
        "ry167": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y167",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 86
            }
        },
        "ry174": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y174",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 87
            }
        },
        "ry186": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y186",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 88
            }
        },
        "ry193": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y193",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 89
            }
        },
        "ry199": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y199",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 90
            }
        },
        "ry206": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y206",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 91
            }
        },
        "ry212": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y212",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 92
            }
        },
        "ry219": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y219",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 93
            }
        },
        "ry231": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y231",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 94
            }
        },
        "ry238": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y238",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 95
            }
        },
        "ry244": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y244",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 96
            }
        },
        "ry251": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y251",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 97
            }
        },
        "ry257": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y257",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 98
            }
        },
        "ry264": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y264",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 99
            }
        },
        "ry276": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y276",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 100
            }
        },
        "ry283": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y283",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 101
            }
        },
        "ry289": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y289",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 102
            }
        },
        "ry296": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y296",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 103
            }
        },
        "ry302": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y302",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 104
            }
        },
        "ry309": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y309",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 105
            }
        },
        "ry321": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y321",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 106
            }
        },
        "ry328": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y328",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 107
            }
        },
        "ry334": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y334",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 108
            }
        },
        "ry341": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y341",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 109
            }
        },
        "ry347": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y347",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 110
            }
        },
        "ry354": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y354",
            "cc": {
                "ref_signal": "single-qubit-mw",
                "static_codeword_override": 111
            }
        },
        "phase_corr_park": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "i",
            "cc": {
                "ref_signal": "single-qubit-mw",    // NB: reference, instead of defining "signal" here
                "static_codeword_override": 112
            }
        },
        "phase_corr_nw": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "i",
            "cc": {
            	"ref_signal": "single-qubit-mw",    // NB: reference, instead of defining "signal" here
                "static_codeword_override": 113
            }
        },
        "phase_corr_ne": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "i",
            "cc": {
            	"ref_signal": "single-qubit-mw",    // NB: reference, instead of defining "signal" here
                "static_codeword_override": 114
            }
        },
        "phase_corr_sw": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "i",
            "cc": {
            	"ref_signal": "single-qubit-mw",    // NB: reference, instead of defining "signal" here
                "static_codeword_override": 115
            }
        },
        "phase_corr_se": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "i",
            "cc": {
            	"ref_signal": "single-qubit-mw",    // NB: reference, instead of defining "signal" here
                "static_codeword_override": 116
            }
        },
        "t": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "i",
            "cc": {
            	"ref_signal": "single-qubit-mw",    // NB: reference, instead of defining "signal" here
                "static_codeword_override": 117
            }
        },
        "s": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "i",
            "cc": {
            	"ref_signal": "single-qubit-mw",    // NB: reference, instead of defining "signal" here
                "static_codeword_override": 118
            }
        },
        "z": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "i",
            "cc": {
            	"ref_signal": "single-qubit-mw",    // NB: reference, instead of defining "signal" here
                "static_codeword_override": 119
            }
        },
        "sdag": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "i",
            "cc": {
            	"ref_signal": "single-qubit-mw",    // NB: reference, instead of defining "signal" here
                "static_codeword_override": 120
            }
        },
        "tdag": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "i",
            "cc": {
            	"ref_signal": "single-qubit-mw",    // NB: reference, instead of defining "signal" here
                "static_codeword_override": 121
            }
        }
	},	// end of "instructions"



    // NB: the "topology" keyword must be present, but the contents are only interpreted by
    // the 'resource constraint' scheduler, which we don't use
    "topology": {
    },


    // NB: the "resources" keyword must be present, but the contents are only interpreted by
    // the 'resource constraint' scheduler, which we don't use
    "resources": {
    }
}

