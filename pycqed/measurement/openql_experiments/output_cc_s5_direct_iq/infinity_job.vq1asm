# Program: 'infinity_job'
# CC_BACKEND_VERSION 0.4.0
# OPENQL_VERSION 0.10.4
# Note:    generated by OpenQL Central Controller backend
#
.CODE                           
# synchronous start and latency compensation
                seq_bar                                             # synchronization, delay set externally through SET_SEQ_BAR_CNT
                seq_out         0x00000000,1                        # allows monitoring actual start time using trace unit
# start of main loop that runs indefinitely
__mainLoop:                                                         # 
                seq_state       0                                   # clear Programmable Logic state
                
### Block: 'post_select_block'
## Bundle 0: start_cycle=0:
 # gate 'prepz <W:qubit> q[0]'
 # gate 'prepz <W:qubit> q[1]'
 # gate 'prepz <W:qubit> q[2]'
 # gate 'prepz <W:qubit> q[3]'
 # gate 'prepz <W:qubit> q[4]'
                
## Bundle 1: start_cycle=7500:
 # gate 'measure <M:qubit> q[0]'
  # slot=0, instrument='ro_1', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[1]'
  # slot=1, instrument='ro_2', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[2]'
  # slot=0, instrument='ro_1', group=1': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[3]'
  # slot=0, instrument='ro_1', group=2': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[4]'
  # slot=0, instrument='ro_1', group=3': signalValue='[dummy]'
                
                
                
                
                
 # last bundle of kernel, will pad outputs to match durations
  # slot=0, instrument='ro_1': lastEndCycle=0, startCycle=7500, instrMaxDurationInCycles=60
[0]             seq_wait        7500                                # cycle 0-7500: padding on 'ro_1'
[0]             seq_out         0x001f0000,60                       # cycle 7500-7560: code word/mask on 'ro_1'
  # slot=1, instrument='ro_2': lastEndCycle=0, startCycle=7500, instrMaxDurationInCycles=60
[1]             seq_wait        7500                                # cycle 0-7500: padding on 'ro_2'
[1]             seq_out         0x00030000,60                       # cycle 7500-7560: code word/mask on 'ro_2'
[2]             seq_wait        7560                                # cycle 0-7560: padding on 'mw_0'
[3]             seq_wait        7560                                # cycle 0-7560: padding on 'mw_1'
[4]             seq_wait        7560                                # cycle 0-7560: padding on 'flux_0'
                
### Block end: 'post_select_block'
                
### Block: 'end_post_select_block'
## Bundle 2: start_cycle=0:
 # gate 'rx87 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=24 (static override): groupDigOut=0x00000018
  # slot=2, instrument='mw_0': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[2]             seq_out         0x80000018,1                        # cycle 0-1: code word/mask on 'mw_0'
                
## Bundle 3: start_cycle=1:
                
## Bundle 4: start_cycle=100001:
 # gate 'rx87 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=24 (static override): groupDigOut=0x00000018
  # slot=2, instrument='mw_0': lastEndCycle=1, startCycle=100001, instrMaxDurationInCycles=1
[2]             seq_wait        100000                              # cycle 1-100001: padding on 'mw_0'
[2]             seq_out         0x80000018,1                        # cycle 100001-100002: code word/mask on 'mw_0'
                
## Bundle 5: start_cycle=100002:
 # gate 'measure <M:qubit> q[0]'
  # slot=0, instrument='ro_1', group=0': signalValue='[dummy]'
                
 # last bundle of kernel, will pad outputs to match durations
  # slot=0, instrument='ro_1': lastEndCycle=0, startCycle=100002, instrMaxDurationInCycles=60
[0]             seq_wait        100002                              # cycle 0-100002: padding on 'ro_1'
[0]             seq_out         0x00030000,60                       # cycle 100002-100062: code word/mask on 'ro_1'
[1]             seq_wait        100062                              # cycle 0-100062: padding on 'ro_2'
[2]             seq_wait        60                                  # cycle 100002-100062: padding on 'mw_0'
[3]             seq_wait        100062                              # cycle 0-100062: padding on 'mw_1'
[4]             seq_wait        100062                              # cycle 0-100062: padding on 'flux_0'
                
### Block end: 'end_post_select_block'
# finish program
                seq_wait        1                                   
                jmp             @__mainLoop                         # loop indefinitely
.END                            
.DATAPATH                                               
## Bundle 0: start_cycle=0:
## Bundle 1: start_cycle=7500:
## Bundle 2: start_cycle=0:
## Bundle 3: start_cycle=1:
## Bundle 4: start_cycle=100001:
## Bundle 5: start_cycle=100002:
.END                                                    
