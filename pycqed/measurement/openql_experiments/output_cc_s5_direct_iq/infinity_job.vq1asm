# Program: 'infinity_job'
# CC_BACKEND_VERSION 0.4.0
# OPENQL_VERSION 0.10.4
# Note:    generated by OpenQL Central Controller backend
#
.CODE                           
# synchronous start and latency compensation
                seq_bar                                             # synchronization, delay set externally through SET_SEQ_BAR_CNT
                seq_out         0x00000000,1                        # allows monitoring actual start time using trace unit
# start of main loop that runs indefinitely
__mainLoop:                                                         # 
                seq_state       0                                   # clear Programmable Logic state
                
### Block: 'post_select_block'
## Bundle 0: start_cycle=0:
 # gate 'prepz <W:qubit> q[0]'
 # gate 'prepz <W:qubit> q[1]'
 # gate 'prepz <W:qubit> q[2]'
 # gate 'prepz <W:qubit> q[3]'
 # gate 'prepz <W:qubit> q[4]'
                
## Bundle 1: start_cycle=7500:
 # gate 'i <U:qubit> q[0]'
 # gate 'i <U:qubit> q[1]'
 # gate 'i <U:qubit> q[2]'
 # gate 'i <U:qubit> q[3]'
 # gate 'i <U:qubit> q[4]'
                
## Bundle 2: start_cycle=7501:
 # gate 'i <U:qubit> q[0]'
 # gate 'i <U:qubit> q[1]'
 # gate 'i <U:qubit> q[2]'
 # gate 'i <U:qubit> q[3]'
 # gate 'i <U:qubit> q[4]'
                
## Bundle 3: start_cycle=7502:
 # gate 'measure <M:qubit> q[0]'
  # slot=0, instrument='ro_1', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[1]'
  # slot=1, instrument='ro_2', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[2]'
  # slot=0, instrument='ro_1', group=1': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[3]'
  # slot=0, instrument='ro_1', group=2': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[4]'
  # slot=0, instrument='ro_1', group=3': signalValue='[dummy]'
                
                
                
                
                
  # slot=0, instrument='ro_1': lastEndCycle=0, startCycle=7502, instrMaxDurationInCycles=50
[0]             seq_wait        7502                                # cycle 0-7502: padding on 'ro_1'
[0]             seq_out         0x001f0000,50                       # cycle 7502-7552: code word/mask on 'ro_1'
  # slot=1, instrument='ro_2': lastEndCycle=0, startCycle=7502, instrMaxDurationInCycles=50
[1]             seq_wait        7502                                # cycle 0-7502: padding on 'ro_2'
[1]             seq_out         0x00030000,50                       # cycle 7502-7552: code word/mask on 'ro_2'
                
## Bundle 4: start_cycle=7552:
 # gate 'i <U:qubit> q[0]'
 # gate 'i <U:qubit> q[1]'
 # gate 'i <U:qubit> q[2]'
 # gate 'i <U:qubit> q[3]'
 # gate 'i <U:qubit> q[4]'
 # last bundle of kernel, will pad outputs to match durations
[0]             seq_wait        1                                   # cycle 7552-7553: padding on 'ro_1'
[1]             seq_wait        1                                   # cycle 7552-7553: padding on 'ro_2'
[2]             seq_wait        7553                                # cycle 0-7553: padding on 'mw_0'
[3]             seq_wait        7553                                # cycle 0-7553: padding on 'mw_1'
[4]             seq_wait        7553                                # cycle 0-7553: padding on 'flux_0'
                
### Block end: 'post_select_block'
                
### Block: 'end_post_select_block'
### Block end: 'end_post_select_block'
                
### Block: 'rad0'
## Bundle 5: start_cycle=0:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[2]             seq_out         0x84080408,1                        # cycle 0-1: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[3]             seq_out         0x80000008,1                        # cycle 0-1: code word/mask on 'mw_1'
                
## Bundle 6: start_cycle=1:
                
## Bundle 7: start_cycle=101:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[2]             seq_wait        100                                 # cycle 1-101: padding on 'mw_0'
[2]             seq_out         0x84080408,1                        # cycle 101-102: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[3]             seq_wait        100                                 # cycle 1-101: padding on 'mw_1'
[3]             seq_out         0x80000008,1                        # cycle 101-102: code word/mask on 'mw_1'
                
## Bundle 8: start_cycle=102:
 # gate 'measure <M:qubit> q[0]'
  # slot=0, instrument='ro_1', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[1]'
  # slot=1, instrument='ro_2', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[2]'
  # slot=0, instrument='ro_1', group=1': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[3]'
  # slot=0, instrument='ro_1', group=2': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[4]'
  # slot=0, instrument='ro_1', group=3': signalValue='[dummy]'
                
                
                
                
                
  # slot=0, instrument='ro_1': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[0]             seq_wait        102                                 # cycle 0-102: padding on 'ro_1'
[0]             seq_out         0x001f0000,50                       # cycle 102-152: code word/mask on 'ro_1'
  # slot=1, instrument='ro_2': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[1]             seq_wait        102                                 # cycle 0-102: padding on 'ro_2'
[1]             seq_out         0x00030000,50                       # cycle 102-152: code word/mask on 'ro_2'
                
## Bundle 9: start_cycle=152:
 # last bundle of kernel, will pad outputs to match durations
[0]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_1'
[1]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_2'
[2]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_0'
[3]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_1'
[4]             seq_wait        5152                                # cycle 0-5152: padding on 'flux_0'
                
### Block end: 'rad0'
                
### Block: 'rad1'
## Bundle 10: start_cycle=0:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[2]             seq_out         0x84080408,1                        # cycle 0-1: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[3]             seq_out         0x80000008,1                        # cycle 0-1: code word/mask on 'mw_1'
                
## Bundle 11: start_cycle=1:
                
## Bundle 12: start_cycle=101:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[2]             seq_wait        100                                 # cycle 1-101: padding on 'mw_0'
[2]             seq_out         0x84080408,1                        # cycle 101-102: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[3]             seq_wait        100                                 # cycle 1-101: padding on 'mw_1'
[3]             seq_out         0x80000008,1                        # cycle 101-102: code word/mask on 'mw_1'
                
## Bundle 13: start_cycle=102:
 # gate 'measure <M:qubit> q[0]'
  # slot=0, instrument='ro_1', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[1]'
  # slot=1, instrument='ro_2', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[2]'
  # slot=0, instrument='ro_1', group=1': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[3]'
  # slot=0, instrument='ro_1', group=2': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[4]'
  # slot=0, instrument='ro_1', group=3': signalValue='[dummy]'
                
                
                
                
                
  # slot=0, instrument='ro_1': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[0]             seq_wait        102                                 # cycle 0-102: padding on 'ro_1'
[0]             seq_out         0x001f0000,50                       # cycle 102-152: code word/mask on 'ro_1'
  # slot=1, instrument='ro_2': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[1]             seq_wait        102                                 # cycle 0-102: padding on 'ro_2'
[1]             seq_out         0x00030000,50                       # cycle 102-152: code word/mask on 'ro_2'
                
## Bundle 14: start_cycle=152:
 # last bundle of kernel, will pad outputs to match durations
[0]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_1'
[1]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_2'
[2]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_0'
[3]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_1'
[4]             seq_wait        5152                                # cycle 0-5152: padding on 'flux_0'
                
### Block end: 'rad1'
                
### Block: 'rad2'
## Bundle 15: start_cycle=0:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[2]             seq_out         0x84080408,1                        # cycle 0-1: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[3]             seq_out         0x80000008,1                        # cycle 0-1: code word/mask on 'mw_1'
                
## Bundle 16: start_cycle=1:
                
## Bundle 17: start_cycle=101:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[2]             seq_wait        100                                 # cycle 1-101: padding on 'mw_0'
[2]             seq_out         0x84080408,1                        # cycle 101-102: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[3]             seq_wait        100                                 # cycle 1-101: padding on 'mw_1'
[3]             seq_out         0x80000008,1                        # cycle 101-102: code word/mask on 'mw_1'
                
## Bundle 18: start_cycle=102:
 # gate 'measure <M:qubit> q[0]'
  # slot=0, instrument='ro_1', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[1]'
  # slot=1, instrument='ro_2', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[2]'
  # slot=0, instrument='ro_1', group=1': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[3]'
  # slot=0, instrument='ro_1', group=2': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[4]'
  # slot=0, instrument='ro_1', group=3': signalValue='[dummy]'
                
                
                
                
                
  # slot=0, instrument='ro_1': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[0]             seq_wait        102                                 # cycle 0-102: padding on 'ro_1'
[0]             seq_out         0x001f0000,50                       # cycle 102-152: code word/mask on 'ro_1'
  # slot=1, instrument='ro_2': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[1]             seq_wait        102                                 # cycle 0-102: padding on 'ro_2'
[1]             seq_out         0x00030000,50                       # cycle 102-152: code word/mask on 'ro_2'
                
## Bundle 19: start_cycle=152:
 # last bundle of kernel, will pad outputs to match durations
[0]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_1'
[1]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_2'
[2]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_0'
[3]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_1'
[4]             seq_wait        5152                                # cycle 0-5152: padding on 'flux_0'
                
### Block end: 'rad2'
                
### Block: 'rad3'
## Bundle 20: start_cycle=0:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[2]             seq_out         0x84080408,1                        # cycle 0-1: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[3]             seq_out         0x80000008,1                        # cycle 0-1: code word/mask on 'mw_1'
                
## Bundle 21: start_cycle=1:
                
## Bundle 22: start_cycle=101:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[2]             seq_wait        100                                 # cycle 1-101: padding on 'mw_0'
[2]             seq_out         0x84080408,1                        # cycle 101-102: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[3]             seq_wait        100                                 # cycle 1-101: padding on 'mw_1'
[3]             seq_out         0x80000008,1                        # cycle 101-102: code word/mask on 'mw_1'
                
## Bundle 23: start_cycle=102:
 # gate 'measure <M:qubit> q[0]'
  # slot=0, instrument='ro_1', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[1]'
  # slot=1, instrument='ro_2', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[2]'
  # slot=0, instrument='ro_1', group=1': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[3]'
  # slot=0, instrument='ro_1', group=2': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[4]'
  # slot=0, instrument='ro_1', group=3': signalValue='[dummy]'
                
                
                
                
                
  # slot=0, instrument='ro_1': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[0]             seq_wait        102                                 # cycle 0-102: padding on 'ro_1'
[0]             seq_out         0x001f0000,50                       # cycle 102-152: code word/mask on 'ro_1'
  # slot=1, instrument='ro_2': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[1]             seq_wait        102                                 # cycle 0-102: padding on 'ro_2'
[1]             seq_out         0x00030000,50                       # cycle 102-152: code word/mask on 'ro_2'
                
## Bundle 24: start_cycle=152:
 # last bundle of kernel, will pad outputs to match durations
[0]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_1'
[1]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_2'
[2]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_0'
[3]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_1'
[4]             seq_wait        5152                                # cycle 0-5152: padding on 'flux_0'
                
### Block end: 'rad3'
                
### Block: 'rad4'
## Bundle 25: start_cycle=0:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[2]             seq_out         0x84080408,1                        # cycle 0-1: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[3]             seq_out         0x80000008,1                        # cycle 0-1: code word/mask on 'mw_1'
                
## Bundle 26: start_cycle=1:
                
## Bundle 27: start_cycle=101:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[2]             seq_wait        100                                 # cycle 1-101: padding on 'mw_0'
[2]             seq_out         0x84080408,1                        # cycle 101-102: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[3]             seq_wait        100                                 # cycle 1-101: padding on 'mw_1'
[3]             seq_out         0x80000008,1                        # cycle 101-102: code word/mask on 'mw_1'
                
## Bundle 28: start_cycle=102:
 # gate 'measure <M:qubit> q[0]'
  # slot=0, instrument='ro_1', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[1]'
  # slot=1, instrument='ro_2', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[2]'
  # slot=0, instrument='ro_1', group=1': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[3]'
  # slot=0, instrument='ro_1', group=2': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[4]'
  # slot=0, instrument='ro_1', group=3': signalValue='[dummy]'
                
                
                
                
                
  # slot=0, instrument='ro_1': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[0]             seq_wait        102                                 # cycle 0-102: padding on 'ro_1'
[0]             seq_out         0x001f0000,50                       # cycle 102-152: code word/mask on 'ro_1'
  # slot=1, instrument='ro_2': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[1]             seq_wait        102                                 # cycle 0-102: padding on 'ro_2'
[1]             seq_out         0x00030000,50                       # cycle 102-152: code word/mask on 'ro_2'
                
## Bundle 29: start_cycle=152:
 # last bundle of kernel, will pad outputs to match durations
[0]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_1'
[1]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_2'
[2]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_0'
[3]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_1'
[4]             seq_wait        5152                                # cycle 0-5152: padding on 'flux_0'
                
### Block end: 'rad4'
                
### Block: 'rad5'
## Bundle 30: start_cycle=0:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[2]             seq_out         0x84080408,1                        # cycle 0-1: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[3]             seq_out         0x80000008,1                        # cycle 0-1: code word/mask on 'mw_1'
                
## Bundle 31: start_cycle=1:
                
## Bundle 32: start_cycle=101:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[2]             seq_wait        100                                 # cycle 1-101: padding on 'mw_0'
[2]             seq_out         0x84080408,1                        # cycle 101-102: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[3]             seq_wait        100                                 # cycle 1-101: padding on 'mw_1'
[3]             seq_out         0x80000008,1                        # cycle 101-102: code word/mask on 'mw_1'
                
## Bundle 33: start_cycle=102:
 # gate 'measure <M:qubit> q[0]'
  # slot=0, instrument='ro_1', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[1]'
  # slot=1, instrument='ro_2', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[2]'
  # slot=0, instrument='ro_1', group=1': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[3]'
  # slot=0, instrument='ro_1', group=2': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[4]'
  # slot=0, instrument='ro_1', group=3': signalValue='[dummy]'
                
                
                
                
                
  # slot=0, instrument='ro_1': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[0]             seq_wait        102                                 # cycle 0-102: padding on 'ro_1'
[0]             seq_out         0x001f0000,50                       # cycle 102-152: code word/mask on 'ro_1'
  # slot=1, instrument='ro_2': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[1]             seq_wait        102                                 # cycle 0-102: padding on 'ro_2'
[1]             seq_out         0x00030000,50                       # cycle 102-152: code word/mask on 'ro_2'
                
## Bundle 34: start_cycle=152:
 # last bundle of kernel, will pad outputs to match durations
[0]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_1'
[1]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_2'
[2]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_0'
[3]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_1'
[4]             seq_wait        5152                                # cycle 0-5152: padding on 'flux_0'
                
### Block end: 'rad5'
                
### Block: 'rad6'
## Bundle 35: start_cycle=0:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[2]             seq_out         0x84080408,1                        # cycle 0-1: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[3]             seq_out         0x80000008,1                        # cycle 0-1: code word/mask on 'mw_1'
                
## Bundle 36: start_cycle=1:
                
## Bundle 37: start_cycle=101:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[2]             seq_wait        100                                 # cycle 1-101: padding on 'mw_0'
[2]             seq_out         0x84080408,1                        # cycle 101-102: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[3]             seq_wait        100                                 # cycle 1-101: padding on 'mw_1'
[3]             seq_out         0x80000008,1                        # cycle 101-102: code word/mask on 'mw_1'
                
## Bundle 38: start_cycle=102:
 # gate 'measure <M:qubit> q[0]'
  # slot=0, instrument='ro_1', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[1]'
  # slot=1, instrument='ro_2', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[2]'
  # slot=0, instrument='ro_1', group=1': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[3]'
  # slot=0, instrument='ro_1', group=2': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[4]'
  # slot=0, instrument='ro_1', group=3': signalValue='[dummy]'
                
                
                
                
                
  # slot=0, instrument='ro_1': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[0]             seq_wait        102                                 # cycle 0-102: padding on 'ro_1'
[0]             seq_out         0x001f0000,50                       # cycle 102-152: code word/mask on 'ro_1'
  # slot=1, instrument='ro_2': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[1]             seq_wait        102                                 # cycle 0-102: padding on 'ro_2'
[1]             seq_out         0x00030000,50                       # cycle 102-152: code word/mask on 'ro_2'
                
## Bundle 39: start_cycle=152:
 # last bundle of kernel, will pad outputs to match durations
[0]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_1'
[1]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_2'
[2]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_0'
[3]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_1'
[4]             seq_wait        5152                                # cycle 0-5152: padding on 'flux_0'
                
### Block end: 'rad6'
                
### Block: 'rad7'
## Bundle 40: start_cycle=0:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[2]             seq_out         0x84080408,1                        # cycle 0-1: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[3]             seq_out         0x80000008,1                        # cycle 0-1: code word/mask on 'mw_1'
                
## Bundle 41: start_cycle=1:
                
## Bundle 42: start_cycle=101:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[2]             seq_wait        100                                 # cycle 1-101: padding on 'mw_0'
[2]             seq_out         0x84080408,1                        # cycle 101-102: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[3]             seq_wait        100                                 # cycle 1-101: padding on 'mw_1'
[3]             seq_out         0x80000008,1                        # cycle 101-102: code word/mask on 'mw_1'
                
## Bundle 43: start_cycle=102:
 # gate 'measure <M:qubit> q[0]'
  # slot=0, instrument='ro_1', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[1]'
  # slot=1, instrument='ro_2', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[2]'
  # slot=0, instrument='ro_1', group=1': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[3]'
  # slot=0, instrument='ro_1', group=2': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[4]'
  # slot=0, instrument='ro_1', group=3': signalValue='[dummy]'
                
                
                
                
                
  # slot=0, instrument='ro_1': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[0]             seq_wait        102                                 # cycle 0-102: padding on 'ro_1'
[0]             seq_out         0x001f0000,50                       # cycle 102-152: code word/mask on 'ro_1'
  # slot=1, instrument='ro_2': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[1]             seq_wait        102                                 # cycle 0-102: padding on 'ro_2'
[1]             seq_out         0x00030000,50                       # cycle 102-152: code word/mask on 'ro_2'
                
## Bundle 44: start_cycle=152:
 # last bundle of kernel, will pad outputs to match durations
[0]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_1'
[1]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_2'
[2]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_0'
[3]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_1'
[4]             seq_wait        5152                                # cycle 0-5152: padding on 'flux_0'
                
### Block end: 'rad7'
                
### Block: 'rad8'
## Bundle 45: start_cycle=0:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[2]             seq_out         0x84080408,1                        # cycle 0-1: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[3]             seq_out         0x80000008,1                        # cycle 0-1: code word/mask on 'mw_1'
                
## Bundle 46: start_cycle=1:
                
## Bundle 47: start_cycle=101:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[2]             seq_wait        100                                 # cycle 1-101: padding on 'mw_0'
[2]             seq_out         0x84080408,1                        # cycle 101-102: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[3]             seq_wait        100                                 # cycle 1-101: padding on 'mw_1'
[3]             seq_out         0x80000008,1                        # cycle 101-102: code word/mask on 'mw_1'
                
## Bundle 48: start_cycle=102:
 # gate 'measure <M:qubit> q[0]'
  # slot=0, instrument='ro_1', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[1]'
  # slot=1, instrument='ro_2', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[2]'
  # slot=0, instrument='ro_1', group=1': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[3]'
  # slot=0, instrument='ro_1', group=2': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[4]'
  # slot=0, instrument='ro_1', group=3': signalValue='[dummy]'
                
                
                
                
                
  # slot=0, instrument='ro_1': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[0]             seq_wait        102                                 # cycle 0-102: padding on 'ro_1'
[0]             seq_out         0x001f0000,50                       # cycle 102-152: code word/mask on 'ro_1'
  # slot=1, instrument='ro_2': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[1]             seq_wait        102                                 # cycle 0-102: padding on 'ro_2'
[1]             seq_out         0x00030000,50                       # cycle 102-152: code word/mask on 'ro_2'
                
## Bundle 49: start_cycle=152:
 # last bundle of kernel, will pad outputs to match durations
[0]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_1'
[1]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_2'
[2]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_0'
[3]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_1'
[4]             seq_wait        5152                                # cycle 0-5152: padding on 'flux_0'
                
### Block end: 'rad8'
                
### Block: 'rad9'
## Bundle 50: start_cycle=0:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[2]             seq_out         0x84080408,1                        # cycle 0-1: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[3]             seq_out         0x80000008,1                        # cycle 0-1: code word/mask on 'mw_1'
                
## Bundle 51: start_cycle=1:
                
## Bundle 52: start_cycle=101:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[1]'
  # slot=2, instrument='mw_0', group=1': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[2]'
  # slot=2, instrument='mw_0', group=2': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[3]'
  # slot=2, instrument='mw_0', group=3': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
 # gate 'rx180 <X:qubit> q[4]'
  # slot=3, instrument='mw_1', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0', group=1: codeword=8 (static override): groupDigOut=0x00000400
  # slot=2, instrument='mw_0', group=2: codeword=8 (static override): groupDigOut=0x00080000
  # slot=2, instrument='mw_0', group=3: codeword=8 (static override): groupDigOut=0x04000000
  # slot=3, instrument='mw_1', group=0: codeword=8 (static override): groupDigOut=0x00000008
  # slot=2, instrument='mw_0': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[2]             seq_wait        100                                 # cycle 1-101: padding on 'mw_0'
[2]             seq_out         0x84080408,1                        # cycle 101-102: code word/mask on 'mw_0'
  # slot=3, instrument='mw_1': lastEndCycle=1, startCycle=101, instrMaxDurationInCycles=1
[3]             seq_wait        100                                 # cycle 1-101: padding on 'mw_1'
[3]             seq_out         0x80000008,1                        # cycle 101-102: code word/mask on 'mw_1'
                
## Bundle 53: start_cycle=102:
 # gate 'measure <M:qubit> q[0]'
  # slot=0, instrument='ro_1', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[1]'
  # slot=1, instrument='ro_2', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[2]'
  # slot=0, instrument='ro_1', group=1': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[3]'
  # slot=0, instrument='ro_1', group=2': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[4]'
  # slot=0, instrument='ro_1', group=3': signalValue='[dummy]'
                
                
                
                
                
  # slot=0, instrument='ro_1': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[0]             seq_wait        102                                 # cycle 0-102: padding on 'ro_1'
[0]             seq_out         0x001f0000,50                       # cycle 102-152: code word/mask on 'ro_1'
  # slot=1, instrument='ro_2': lastEndCycle=0, startCycle=102, instrMaxDurationInCycles=50
[1]             seq_wait        102                                 # cycle 0-102: padding on 'ro_2'
[1]             seq_out         0x00030000,50                       # cycle 102-152: code word/mask on 'ro_2'
                
## Bundle 54: start_cycle=152:
 # last bundle of kernel, will pad outputs to match durations
[0]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_1'
[1]             seq_wait        5000                                # cycle 152-5152: padding on 'ro_2'
[2]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_0'
[3]             seq_wait        5050                                # cycle 102-5152: padding on 'mw_1'
[4]             seq_wait        5152                                # cycle 0-5152: padding on 'flux_0'
                
### Block end: 'rad9'
# finish program
                seq_wait        1                                   
                jmp             @__mainLoop                         # loop indefinitely
.END                            
.DATAPATH                                               
## Bundle 0: start_cycle=0:
## Bundle 1: start_cycle=7500:
## Bundle 2: start_cycle=7501:
## Bundle 3: start_cycle=7502:
## Bundle 4: start_cycle=7552:
## Bundle 5: start_cycle=0:
## Bundle 6: start_cycle=1:
## Bundle 7: start_cycle=101:
## Bundle 8: start_cycle=102:
## Bundle 9: start_cycle=152:
## Bundle 10: start_cycle=0:
## Bundle 11: start_cycle=1:
## Bundle 12: start_cycle=101:
## Bundle 13: start_cycle=102:
## Bundle 14: start_cycle=152:
## Bundle 15: start_cycle=0:
## Bundle 16: start_cycle=1:
## Bundle 17: start_cycle=101:
## Bundle 18: start_cycle=102:
## Bundle 19: start_cycle=152:
## Bundle 20: start_cycle=0:
## Bundle 21: start_cycle=1:
## Bundle 22: start_cycle=101:
## Bundle 23: start_cycle=102:
## Bundle 24: start_cycle=152:
## Bundle 25: start_cycle=0:
## Bundle 26: start_cycle=1:
## Bundle 27: start_cycle=101:
## Bundle 28: start_cycle=102:
## Bundle 29: start_cycle=152:
## Bundle 30: start_cycle=0:
## Bundle 31: start_cycle=1:
## Bundle 32: start_cycle=101:
## Bundle 33: start_cycle=102:
## Bundle 34: start_cycle=152:
## Bundle 35: start_cycle=0:
## Bundle 36: start_cycle=1:
## Bundle 37: start_cycle=101:
## Bundle 38: start_cycle=102:
## Bundle 39: start_cycle=152:
## Bundle 40: start_cycle=0:
## Bundle 41: start_cycle=1:
## Bundle 42: start_cycle=101:
## Bundle 43: start_cycle=102:
## Bundle 44: start_cycle=152:
## Bundle 45: start_cycle=0:
## Bundle 46: start_cycle=1:
## Bundle 47: start_cycle=101:
## Bundle 48: start_cycle=102:
## Bundle 49: start_cycle=152:
## Bundle 50: start_cycle=0:
## Bundle 51: start_cycle=1:
## Bundle 52: start_cycle=101:
## Bundle 53: start_cycle=102:
## Bundle 54: start_cycle=152:
.END                                                    
