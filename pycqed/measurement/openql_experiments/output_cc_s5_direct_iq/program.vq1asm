# Program: 'program'
# CC_BACKEND_VERSION 0.4.0
# OPENQL_VERSION 0.10.4
# Note:    generated by OpenQL Central Controller backend
#
.CODE                           
# synchronous start and latency compensation
                seq_bar                                             # synchronization, delay set externally through SET_SEQ_BAR_CNT
                seq_out         0x00000000,1                        # allows monitoring actual start time using trace unit
                seq_state       0                                   # clear Programmable Logic state
                
### Block: 'post_select_block'
## Bundle 0: start_cycle=0:
 # gate 'prepz <W:qubit> q[0]'
 # gate 'prepz <W:qubit> q[1]'
 # gate 'prepz <W:qubit> q[2]'
 # gate 'prepz <W:qubit> q[3]'
 # gate 'prepz <W:qubit> q[4]'
                
## Bundle 1: start_cycle=7500:
 # gate 'measure <M:qubit> q[0]'
  # slot=0, instrument='ro_1', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[1]'
  # slot=1, instrument='ro_2', group=0': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[2]'
  # slot=0, instrument='ro_1', group=1': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[3]'
  # slot=0, instrument='ro_1', group=2': signalValue='[dummy]'
 # gate 'measure <M:qubit> q[4]'
  # slot=0, instrument='ro_1', group=3': signalValue='[dummy]'
                
                
                
                
                
 # last bundle of kernel, will pad outputs to match durations
  # slot=0, instrument='ro_1': lastEndCycle=0, startCycle=7500, instrMaxDurationInCycles=150
[0]             seq_wait        7500                                # cycle 0-7500: padding on 'ro_1'
[0]             seq_out         0x001f0000,150                      # cycle 7500-7650: code word/mask on 'ro_1'
  # slot=1, instrument='ro_2': lastEndCycle=0, startCycle=7500, instrMaxDurationInCycles=150
[1]             seq_wait        7500                                # cycle 0-7500: padding on 'ro_2'
[1]             seq_out         0x00030000,150                      # cycle 7500-7650: code word/mask on 'ro_2'
[2]             seq_wait        7650                                # cycle 0-7650: padding on 'mw_0'
[3]             seq_wait        7650                                # cycle 0-7650: padding on 'mw_1'
[4]             seq_wait        7650                                # cycle 0-7650: padding on 'flux_0'
                
### Block end: 'post_select_block'
                
### Block: 'end_post_select_block'
## Bundle 2: start_cycle=0:
 # gate 'rx180 <X:qubit> q[0]'
  # slot=2, instrument='mw_0', group=0': signalValue='[{gateName}-{instrumentName}:{instrumentGroup}-i,{gateName}-{instrumentName}:{instrumentGroup}-q]'
  # slot=2, instrument='mw_0', group=0: codeword=1 (static override): groupDigOut=0x00000001
  # slot=2, instrument='mw_0': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=1
[2]             seq_out         0x80000001,1                        # cycle 0-1: code word/mask on 'mw_0'
                
## Bundle 3: start_cycle=1:
 # gate 'measure <M:qubit> q[0]'
  # slot=0, instrument='ro_1', group=0': signalValue='[dummy]'
                
 # last bundle of kernel, will pad outputs to match durations
  # slot=0, instrument='ro_1': lastEndCycle=0, startCycle=1, instrMaxDurationInCycles=150
[0]             seq_wait        1                                   # cycle 0-1: padding on 'ro_1'
[0]             seq_out         0x00030000,150                      # cycle 1-151: code word/mask on 'ro_1'
[1]             seq_wait        151                                 # cycle 0-151: padding on 'ro_2'
[2]             seq_wait        150                                 # cycle 1-151: padding on 'mw_0'
[3]             seq_wait        151                                 # cycle 0-151: padding on 'mw_1'
[4]             seq_wait        151                                 # cycle 0-151: padding on 'flux_0'
                
### Block end: 'end_post_select_block'
# finish program
                stop
.END                            
.DATAPATH                                               
## Bundle 0: start_cycle=0:
## Bundle 1: start_cycle=7500:
## Bundle 2: start_cycle=0:
## Bundle 3: start_cycle=1:
.END                                                    
