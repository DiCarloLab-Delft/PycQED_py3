// File:    config_cc_s17_direct_iq.json.in
// notes:   requires OpenQL > 0.10.0
//          see https://openql.readthedocs.io/en/latest/gen/reference_architectures.html#qutech-central-controller for documentation of this file
// author: 	Wouter Vlothuizen e.a.

{
	"eqasm_compiler" : "cc",

	"hardware_settings": {
        "qubit_number": 17,
        "creg_number": 32,
        "breg_number": 32,
		"cycle_time" : 20,        // in [ns]

        "eqasm_backend_cc": {

            // Instruments used in this setup, their configuration and connectivity.
            "instruments": [
                // readout.
                {
                    "name": "ro_0",
                    "qubits": [[1], [4], [5], [8], [10], [7], [11], [14], [15]],
                    "signal_type": "measure",
                    "ref_instrument_definition": "zi-uhfqa",
                    "ref_control_mode": "uhfqa-9ch",
                    "controller": {
                        "name": "cc",
                        "slot": 2,
                        "io_module": "CC-CONN-DIO"
                    }
                },
                {
                    "name": "ro_1",
                    "qubits": [[0], [2], [3], [6], [9], [12], [], [], []],
                    "signal_type": "measure",
                    "ref_instrument_definition": "zi-uhfqa",
                    "ref_control_mode": "uhfqa-9ch",
                    "controller": {
                        "name": "cc",
                        "slot": 4,
                        "io_module": "CC-CONN-DIO"
                    }
                },
                {
                    "name": "ro_2",
                    "qubits": [[13], [16], [], [], [], [], [], [], []],
                    "signal_type": "measure",
                    "ref_instrument_definition": "zi-uhfqa",
                    "ref_control_mode": "uhfqa-9ch",
                    "controller": {
                        "name": "cc",
                        "slot": 5,
                        "io_module": "CC-CONN-DIO"
                    }
                },

                // microwave.
                {
                    "name": "mw_0",
                    "qubits": [                                             // data qubits:
                        [8],
                        [9],
                        [14],
                        [15]
                    ],
                    "signal_type": "mw",
                    "ref_instrument_definition": "zi-hdawg",
                    "ref_control_mode": "awg8-mw-direct-iq",
                    "controller": {
                        "name": "cc",
                        "slot": 0,
                        "io_module": "CC-CONN-DIO-DIFF"
                    }
                },
                {
                    "name": "mw_1",
                    "qubits": [                                             // ancilla qubits:
                        [11],
                        [10],
                        [12],
                        []
                    ],
                    "signal_type": "mw",
                    "ref_instrument_definition": "zi-hdawg",
                    "ref_control_mode": "awg8-mw-direct-iq",
                    "controller": {
                        "name": "cc",
                        "slot": 1,
                        "io_module": "CC-CONN-DIO-DIFF"
                    }
                },
                {
                    "name": "mw_2",
                    "qubits": [                                             // data qubits:
                        [0],
                        [1],
                        [2],
                        [3]
                    ],
                    "signal_type": "mw",
                    "ref_instrument_definition": "zi-hdawg",
                    "ref_control_mode": "awg8-mw-direct-iq",
                    "controller": {
                        "name": "cc",
                        "slot": 6,
                        "io_module": "CC-CONN-DIO-DIFF"
                    }
                },
                {
                    "name": "mw_3",
                    "qubits": [                                             // ancilla qubits:
                        [4],
                        [5],
                        [6],
                        [7]
                    ],
                    "signal_type": "mw",
                    "ref_instrument_definition": "zi-hdawg",
                    "ref_control_mode": "awg8-mw-direct-iq",
                    "controller": {
                        "name": "cc",
                        "slot": 7,
                        "io_module": "CC-CONN-DIO-DIFF"
                    }
                },
                {
                    "name": "mw_4",
                    "qubits": [                                             // ancilla qubits:
                        [13],
                        [16],
                        [],
                        []
                    ],
                    "signal_type": "mw",
                    "ref_instrument_definition": "zi-hdawg",
                    "ref_control_mode": "awg8-mw-direct-iq",
                    "controller": {
                        "name": "cc",
                        "slot": 8,
                        "io_module": "CC-CONN-DIO-DIFF"
                    }
                },
                // flux
                {
                    "name": "flux_0",
                    "qubits": [[8], [9], [10], [11], [12], [13], [14], [15]],
                    "signal_type": "flux",
                    "ref_instrument_definition": "zi-hdawg",
                    "ref_control_mode": "awg8-flux",
                    "controller": {
                        "name": "cc",
                        "slot": 3,
                        "io_module": "CC-CONN-DIO-DIFF"
                    }
                },
                {
                    "name": "flux_1",
                    "qubits": [[0], [1], [2], [3], [4], [5], [6], [7]],
                    "signal_type": "flux",
                    "ref_instrument_definition": "zi-hdawg",
                    "ref_control_mode": "awg8-flux",
                    "controller": {
                        "name": "cc",
                        "slot": 9,
                        "io_module": "CC-CONN-DIO-DIFF"
                    }
                },
                {
                    "name": "flux_2",
                    "qubits": [[16], [], [], [], [], [], [], []],
                    "signal_type": "flux",
                    "ref_instrument_definition": "zi-hdawg",
                    "ref_control_mode": "awg8-flux",
                    "controller": {
                        "name": "cc",
                        "slot": 10,
                        "io_module": "CC-CONN-DIO-DIFF"
                    }
                }
            ], // instruments

#include "common_eqasm_backend_cc.json.in"

		}  // eqasm_backend_cc
	},  // hardware_settings

    "gate_decomposition": {
#include "common_gate_decomposition.json.in"
        ,

        // gate decompositions for S17, using new CZ helpers
        "cz q8,q10":   ["_cz_sw_ne_park q8,q10,q11"],
        "cz q10,q8":   ["_cz_sw_ne_park q8,q10,q11"],
        "cz q8,q11":   ["_cz_se_nw_park q8,q11,q10"],
        "cz q11,q8":   ["_cz_se_nw_park q8,q11,q10"],
        "cz q11,q14":  ["_cz_sw_ne_park q11,q14,q15"],
        "cz q14,q11":  ["_cz_sw_ne_park q11,q14,q15"],
        "cz q10,q14":  ["_cz_se_nw q10,q14"],
        "cz q14,q10":  ["_cz_se_nw q10,q14"],
        "cz q9,q11":   ["_cz_sw_ne_park q9,q11,q12"],
        "cz q11,q9":   ["_cz_sw_ne_park q9,q11,q12"],
        "cz q9,q12":   ["_cz_se_nw_park q9,q12,q11"],
        "cz q12,q9":   ["_cz_se_nw_park q9,q12,q11"],
        "cz q11,q15":  ["_cz_se_nw_park q11,q15,q14"],
        "cz q15,q11":  ["_cz_se_nw_park q11,q15,q14"],
        "cz q12,q15":  ["_cz_sw_ne q12,q15"],
        "cz q15,q12":  ["_cz_sw_ne q12,q15"],

        // RUS (FIXME: define instructions for these)
        "rx2theta %0":      ["cw_27 %0"],
        "rxm2theta %0":     ["cw_28 %0"],
        "rx2thetaalpha %0": ["cw_29 %0"],
        "rphi180 %0":       ["cw_27 %0"],
        "rphi180beta %0":   ["cw_28 %0"],
        "rx180beta %0":     ["cw_29 %0"],
        "rphi180beta2 %0":  ["cw_30 %0"],
        "ry90beta %0":      ["cw_28 %0"],
        "rym90alpha %0":    ["cw_29 %0"],
		"ry90betapi %0":    ["cw_30 %0"],
		"rphi180alpha %0":  ["cw_31 %0"],
		"rx90alpha %0":     ["cw_26 %0"],
		"rx180alpha2 %0":   ["cw_25 %0"],
        "rphim2theta %0":   ["cw_28 %0"]
    },  // gate_decomposition

	"instructions": {
#include "common_instructions.json.in"

//        ,

        //****************************************************************
        // decompositions, new style, require OpenQL > 0.10.0
        // see https://openql.readthedocs.io/en/latest/gen/reference_configuration.html#instructions-section
        // Should be compatible with API, and cQASM1.2
        //****************************************************************


        // was:         "measure_fb %0": ["measure %0", "_wait_uhfqa %0", "_dist_dsm %0", "_wait_dsm %0"],
//        "measure_fb": {
//            "prototype": ["U:qubit", "U:bit"],
//            "duration_cycles": 100, // FIXME: note the *_cycles*, should match duration of "into", "duration" is also allowed
//            "cc": { // FIXME: key is required
//                "ref_signal": "single-qubit-mw",
//                "static_codeword_override": [31]
//            },
//            "decomposition": {
//                "into": "measure op(0),op(1); _wait_uhfqa op(0); _dist_dsm op(0); _wait_dsm op(0)"
//            }
//        }
//,
        // CZ decompositions
//        "cz q8,q10": {
//            "prototype": ["Z:qubit", "Z:qubit"],
//            "duration": @FLUX_DURATION@,
//            "cc": { // FIXME: key is required
//                "ref_signal": "single-qubit-mw",
//                "static_codeword_override": [31]
//            },
//            "decomposition": {
//                "into": "_cz_sw_ne_park q8,q10,q11"
//            }
//        }


	},	// instructions

#include "common_keys.json.in"

	}  // hardware_settings
}
