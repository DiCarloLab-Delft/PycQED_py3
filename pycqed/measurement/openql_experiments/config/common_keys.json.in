//{
    // File:    common_keys.json.in
    // notes:   this file specifies commonalities between different setups for key "hardware_settings"
    //          see https://openql.readthedocs.io/en/latest/platform.html#ccplatform for documentation of this file
	// author: 	Wouter Vlothuizen e.a.

	// extracted from PyqQED_py3 'generate_CCL_cfg.py'
  	"gate_decomposition": {
        "x %0": ["rx180 %0"],
        "y %0": ["ry180 %0"],
        "roty90 %0": ["ry90 %0"],
        "cnot %0 %1": ["ry90 %1", "cz %0 %1", "ry90 %1"],

        // To support other forms of writing the same gates
        "x180 %0": ["rx180 %0"],
        "y180 %0": ["ry180 %0"],
        "y90 %0": ["ry90 %0"],
        "x90 %0": ["rx90 %0"],
        "my90 %0": ["rym90 %0"],
        "mx90 %0": ["rxm90 %0"],

        // Clifford decomposition per Epstein et al. Phys. Rev. A 89, 062321 (2014)
        "cl_0 %0": ["i %0"],
        "cl_1 %0": ["ry90 %0", "rx90 %0"],
        "cl_2 %0": ["rxm90 %0", "rym90 %0"],
        "cl_3 %0": ["rx180 %0"],
        "cl_4 %0": ["rym90 %0", "rxm90 %0"],
        "cl_5 %0": ["rx90 %0", "rym90 %0"],
        "cl_6 %0": ["ry180 %0"],
        "cl_7 %0": ["rym90 %0", "rx90 %0"],
        "cl_8 %0": ["rx90 %0", "ry90 %0"],
        "cl_9 %0": ["rx180 %0", "ry180 %0"],
        "cl_10 %0": ["ry90 %0", "rxm90 %0"],
        "cl_11 %0": ["rxm90 %0", "ry90 %0"],
        "cl_12 %0": ["ry90 %0", "rx180 %0"],
        "cl_13 %0": ["rxm90 %0"],
        "cl_14 %0": ["rx90 %0", "rym90 %0", "rxm90 %0"],
        "cl_15 %0": ["rym90 %0"],
        "cl_16 %0": ["rx90 %0"],
        "cl_17 %0": ["rx90 %0", "ry90 %0", "rx90 %0"],
        "cl_18 %0": ["rym90 %0", "rx180 %0"],
        "cl_19 %0": ["rx90 %0", "ry180 %0"],
        "cl_20 %0": ["rx90 %0", "rym90 %0", "rx90 %0"],
        "cl_21 %0": ["ry90 %0"],
        "cl_22 %0": ["rxm90 %0", "ry180 %0"],
        "cl_23 %0": ["rx90 %0", "ry90 %0", "rxm90 %0"],

        // CC additions
        "cnot_park1 %0 %1 %2": ["ry90 %1", "cz %0 %1", "park_cz %2", "ry90 %1"],
        "cnot_park2 %0 %1 %2": ["ry90 %1", "cz_park %0 %1 %2", "ry90 %1"],
        "cz_park1 %0 %1 %2": ["cz %0 %1", "park_cz %2"]

        // also possible
//        "blabla q0 q1": ["foo q0", "foo q1", "foo q3"]
  	},  // gate_decomposition



	"instructions": {
        // based on PyqQED_py3 'mw_lutman.py' and 'generate_CCL_cfg.py':
        "i": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "i",
            "cc": {
                "signal": [],   // no signal, to prevent conflicts with other gates (NB: will output nothing because VSM stays off)
                "static_codeword_override": 0
            }
        },
        "rx180": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x",
            "cc": {
                "signal_ref": "single-qubit-mw",    // NB: reference, instead of defining "signal" here
                "static_codeword_override": 1
            }
        },
        "ry180": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 2
            }
        },
        "rx90": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "x90",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 3
            }
        },
        "ry90": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "y90",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 4
            }
        },
        "rxm90": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "xm90",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 5
            }
        },
        "rym90": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "ym90",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 6
            }
        },

        "cz": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "cz",
            "cc": {
                "signal_ref": "two-qubit-flux",     // NB: reference, instead of defining "signal" here
                "static_codeword_override": 1
            }
        },
        "cz_park": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "cz",
            "cc": {
                "signal": [
                    {   "type": "flux",
                        "operand_idx": 0,                                   // control
                        "value": ["flux-0-{qubit}"]
                    },
                    {   "type": "flux",
                        "operand_idx": 1,                                   // target
                        "value": ["flux-1-{qubit}"]
                    },
                    {   "type": "flux",
                        "operand_idx": 2,                                   // park
                        "value": ["park_cz-{qubit}"]
                    }
                ],
                "static_codeword_override": 0   // FIXME
            }
        },

		// additions from 'CC-software-implementation.docx'
		// flux pulses, see:
        // - https://github.com/QE-Lab/OpenQL/issues/176
        // - https://github.com/QE-Lab/OpenQL/issues/224
        // - https://github.com/QE-Lab/OpenQL/pull/238

		"park_cz" : { // park signal with same length as cz gate
			"duration" : @FLUX_DURATION@,
			"matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
			"cc_light_instr": "park_cz",
			"type": "measure",		// FIXME
			"cc": {
				"signal": [
					{	"type": "flux",
						"operand_idx": 0,
						"value": ["park_cz-{qubit}"]
					}
				],
                "static_codeword_override": 0   // FIXME
			}
		},

		"park_measure" : { // park signal with same length as measurement
			"duration" : @RO_DURATION@,
			"matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
			"cc": {
				"signal": [
					{	"type": "flux",
						"operand_idx": 0,
						"value": ["park_measure-{qubit}"]
					}
				],
                "static_codeword_override": 0   // FIXME
			}
		},


		// based on PyqQED_py3 'generate_CCL_cfg.py':
		"prepz": {
			"duration": @INIT_DURATION@,
			"matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
			"type": "readout",
			"cc_light_instr": "prepz",
            "cc": {
//                "signal_ref": "single-qubit-mw"
                "signal": [],    // FIXME: no signal, pycQED::test_multi_qubit_oql_CC.py fails otherwise on scheduling issues
                "static_codeword_override": 0   // FIXME
            }
		},

		"measure": {
			"duration": @RO_DURATION@,
			"matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
			"type": "readout",
			"cc_light_instr": "measz",
			"cc": {
				"signal": [
					{	"type": "measure",
						"operand_idx": 0,
						"value": ["dummy"]			// Future extension: specify output and weight, and generate code word
					}
				],
                "static_codeword_override": 0   // FIXME
			}
		},

        // additions for pycQED::test_single_qubit_oql_CC.py
        // FIXME: contents untested
        "square": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "square",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 10
            }
        },
        "spec": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "spec",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 0
            }
        },
        "rx12": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "rx12",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 0
            }
        },
        // cw_00 .. cw_31
        "cw_00": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_00",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 0
            }
        },
        "cw_01": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_01",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 1
            }
        },
        "cw_02": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_02",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 2
            }
        },
        "cw_03": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_03",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 3
            }
        },
        "cw_04": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_04",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 4
            }
        },
        "cw_05": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_05",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 5
            }
        },
        "cw_06": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_06",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 6
            }
        },
        "cw_07": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_07",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 7
            }
        },
        "cw_08": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_08",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 8
            }
        },
        "cw_09": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_09",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 9
            }
        },
        "cw_10": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_10",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 10
            }
        },
        "cw_11": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_11",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 11
            }
        },
        "cw_12": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_12",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 12
            }
        },
        "cw_13": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_13",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 13
            }
        },
        "cw_14": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_14",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 14
            }
        },
        "cw_15": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_15",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 15
            }
        },
        "cw_16": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_16",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 16
            }
        },
        "cw_17": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_17",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 17
            }
        },
        "cw_18": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_18",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 18
            }
        },
        "cw_19": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_19",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 19
            }
        },
        "cw_20": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_20",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 20
            }
        },
        "cw_21": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_21",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 21
            }
        },
        "cw_22": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_22",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 22
            }
        },
        "cw_23": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_23",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 23
            }
        },
        "cw_24": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_24",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 24
            }
        },
        "cw_25": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_25",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 25
            }
        },
        "cw_26": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_26",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 26
            }
        },
        "cw_27": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_27",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 27
            }
        },
        "cw_28": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_28",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 28
            }
        },
        "cw_29": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_29",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 29
            }
        },
        "cw_30": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_30",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 30
            }
        },
        "cw_31": {
            "duration": @MW_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "mw",
            "cc_light_instr": "cw_31",
            "cc": {
                "signal_ref": "single-qubit-mw",
                "static_codeword_override": 31
            }
        },

        // fl_cw_00 .. fl_cw_07
        "fl_cw_00": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "fl_cw_00",
            "cc": {
                "signal_ref": "two-qubit-flux",
                "static_codeword_override": 0
            }
        },
        "fl_cw_01": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "fl_cw_01",
            "cc": {
                "signal_ref": "two-qubit-flux",
                "static_codeword_override": 1
            }
        },
        "fl_cw_02": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "fl_cw_02",
            "cc": {
                "signal_ref": "two-qubit-flux",
                "static_codeword_override": 2
            }
        },
        "fl_cw_03": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "fl_cw_03",
            "cc": {
                "signal_ref": "two-qubit-flux",
                "static_codeword_override": 3
            }
        },
        "fl_cw_04": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "fl_cw_04",
            "cc": {
                "signal_ref": "two-qubit-flux",
                "static_codeword_override": 4
            }
        },
        "fl_cw_05": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "fl_cw_05",
            "cc": {
                "signal_ref": "two-qubit-flux",
                "static_codeword_override": 5
            }
        },
        "fl_cw_06": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "fl_cw_06",
            "cc": {
                "signal_ref": "two-qubit-flux",
                "static_codeword_override": 6
            }
        },
        "fl_cw_07": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "fl_cw_07",
            "cc": {
                "signal_ref": "two-qubit-flux",
                "static_codeword_override": 7
            }
        },

        // single qubit flux hacks (compatible with QCC demo/flux lutman)
        "sf_cz_ne": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "sf_cz_ne",
            "cc": {
                "signal_ref": "single-qubit-flux",
                "static_codeword_override": 1
            }
        },
        "sf_cz_se": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "sf_cz_se",
            "cc": {
                "signal_ref": "single-qubit-flux",
                "static_codeword_override": 2
            }
        },
        "sf_cz_sw": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "sf_cz_sw",
            "cc": {
                "signal_ref": "single-qubit-flux",
                "static_codeword_override": 3
            }
        },
        "sf_cz_nw": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "sf_cz_nw",
            "cc": {
                "signal_ref": "single-qubit-flux",
                "static_codeword_override": 4
            }
        },
        "sf_park": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "sf_park",
            "cc": {
                "signal_ref": "single-qubit-flux",
                "static_codeword_override": 5
            }
        },
        "sf_sp_park": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "sf_sp_park",
            "cc": {
                "signal_ref": "single-qubit-flux",
                "static_codeword_override": 5
            }
        },
        "sf_square": {
            "duration": @FLUX_DURATION@,
            "matrix": [ [0.0,1.0], [1.0,0.0], [1.0,0.0], [0.0,0.0] ],
            "type": "flux",
            "cc_light_instr": "sf_square",
            "cc": {
                "signal_ref": "single-qubit-flux",
                "static_codeword_override": 6
            }
        }
	},	// end of "instructions"



    // NB: the "topology" keyword must be present, but the contents are only interpreted by
    // the CC-light 'resource constraint' scheduler
    "topology": {
    },


    // NB: the "resources" keyword must be present, but the contents are only interpreted by
    // the CC-light 'resource constraint' scheduler
    "resources": {
    }
//}

